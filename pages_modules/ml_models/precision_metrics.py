"""
M√≥dulo de M√©tricas de Precisi√≥n para CorAlertMet Intelligence
Muestra confiabilidad detallada de modelos meteorol√≥gicos
"""

from datetime import datetime, timedelta
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import streamlit as st

@st.cache_data(ttl=1800, show_spinner=False)
def show_precision_metrics():
    """Mostrar m√©tricas de precisi√≥n detalladas de modelos"""
    
  
    # M√©tricas de confiabilidad general
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric(
            label="üîç CONFIABILIDAD",
            value="MEDIA",
            delta="85%",
            help="Nivel general de confiabilidad de los modelos"
        )
    
    # Tabla de interpretaci√≥n r√°pida
    st.markdown("### üìã Interpretaci√≥n de Resultados")
    
    interpretation_data = {
        "Modelo": ["ECMWF", "GFS27", "HRRR"],
        "24h (%)": ["94.2", "88.5", "96.8"],
        "48h (%)": ["89.7", "82.3", "92.1"],
        "72h (%)": ["84.1", "76.7", "87.5"],
        "Recomendaci√≥n": [
            "‚úÖ Ideal para pron√≥sticos largos",
            "‚ö†Ô∏è Bueno para validaci√≥n cruzada", 
            "üéØ Excelente para corto plazo"
        ]
    }
    
    df_interpretation = pd.DataFrame(interpretation_data)
    st.dataframe(df_interpretation, use_container_width=True)
    
    # Informaci√≥n adicional
    st.info("""
    **üí° Notas T√©cnicas:**
    - **ECMWF**: Modelo europeo, excelente para pron√≥sticos de 3-7 d√≠as
    - **GFS27**: Modelo global de NOAA, bueno para validaci√≥n cruzada
    - **HRRR**: Alta resoluci√≥n, ideal para pron√≥sticos de 0-24 horas
    """)